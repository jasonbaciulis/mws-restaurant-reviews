class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/restaurants"}static fetchRestaurants(e){self.dbPromise,self.dbPromise?console.log("IndexDB is open"):(console.log("IndexDB was NOT open. Opening it now."),self.dbPromise=DBHelper.openIndexDB()),self.dbPromise.then(function(t){t.transaction("restaurants").objectStore("restaurants").getAll().then(function(t){t.length>1?e(null,t):fetch(DBHelper.DATABASE_URL).then(e=>e.json()).catch(e=>console.log(`Remote server fetch error: ${e}`)).then(t=>{DBHelper.insertData(t),e(null,t)}).catch(t=>e(t,null))})})}static openIndexDB(){return idb.open("restaurant-reviews",1,function(e){e.createObjectStore("restaurants",{keyPath:"id"})})}static insertData(e){self.dbPromise.then(function(t){const n=t.transaction("restaurants","readwrite").objectStore("restaurants");e.forEach(function(e){n.put(e)})})}static fetchRestaurantById(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.find(t=>t.id==e);console.log(n),n?t(null,n):t("Restaurant does not exist",null)}})}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.filter(t=>t.cuisine_type==e);t(null,n)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.filter(t=>t.neighborhood==e);t(null,n)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,n){DBHelper.fetchRestaurants((r,s)=>{if(r)n(r,null);else{let r=s;"all"!=e&&(r=r.filter(t=>t.cuisine_type==e)),"all"!=t&&(r=r.filter(e=>e.neighborhood==t)),n(null,r)}})}static fetchNeighborhoods(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].neighborhood),r=t.filter((e,n)=>t.indexOf(e)==n);e(null,r)}})}static fetchCuisines(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].cuisine_type),r=t.filter((e,n)=>t.indexOf(e)==n);e(null,r)}})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){return`/img/${e.photograph||"restaurant-placeholder"}`}static mapMarkerForRestaurant(e,t){return new google.maps.Marker({position:e.latlng,title:e.name,url:DBHelper.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}}