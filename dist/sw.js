const cacheName="rr-static-v28",imagesCache="rr-images-v2",allCaches=[cacheName,imagesCache],urlsToCache=["/","/index.html","/restaurant.html","/css/normalize.css","/css/styles.css","/js/idb.js","/js/dbhelper.js","/js/lazysizes.min.js","/js/main.js","/js/restaurant_info.js","/favicon/favicon-32x32.png"];self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return console.log("Cache opened"),e.addAll(urlsToCache)}).catch(e=>console.log(`Open cache failed: ${e}`)))}),self.addEventListener("activate",function(e){console.log("Service Worker activated"),e.waitUntil(caches.keys().then(function(e){return Promise.all(e.filter(function(e){return e.startsWith("rr-")&&!allCaches.includes(e)}).map(function(e){return caches.delete(e)}))}))}),self.addEventListener("fetch",function(e){new URL(e.request.url).pathname.startsWith("/img/")?e.respondWith(serveImage(e.request)):e.respondWith(caches.match(e.request).then(function(n){return n?(console.log(`Service worker found in cache: ${e.request.url}`),n):fetch(e.request)}).catch(function(e){console.log(`Service worker error: ${e}`)}))}),serveImage=(e=>caches.open(imagesCache).then(function(n){return n.match(e.url).then(function(t){return t||fetch(e).then(function(t){return n.put(e.url,t.clone()),t})})}));